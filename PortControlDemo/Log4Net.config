<?xml version="1.0" encoding="utf-8" ?>
<configuration>
	<configSections>
		<!--添加自定义节点：log4net type：解析类名，程序集名(log4net.dll)-->
		<section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
	</configSections>
	<!--只保留创建日期是最近15天的-->
	<log4net OverdueDays="15">
		<root>
			<!--<level value="DEBUG"/>-->
			<!--控制级别，由低到高: ALL|DEBUG|INFO|WARN|ERROR|FATAL|OFF-->
			<!--比如定义级别为INFO，则INFO级别向下的级别，比如DEBUG日志将不会被记录-->
			<level value="ALL"/>
			<!--根据log级别记录到不同的日志文件-->
			<appender-ref ref="DebugLogger" />
			<appender-ref ref="InfoLogger" />
			<!--<appender-ref ref="WarnLogger" />-->
			<appender-ref ref="ErrorLogger" />
			<!--<appender-ref ref="FatalLogger" />-->
		</root>

		<!--Debug文件日志记录器-->
		<appender name="DebugLogger" type="log4net.Appender.RollingFileAppender">
			<!--日志存放文件夹-->
			<file value="Log\Debug_Log\"/>
			<!--是否追加到文件-->
			<appendToFile value="true" />
			<!--记录日志写入文件时，不锁定文本文件，防止多线程时不能写Log,官方说线程非安全-->
			<lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
			<!--使用UTF-8编码-->
			<Encoding value="UTF-8" />
			<!--最多产生的日志文件数，超过则只保留最新的n个。设定值value="－1"为不限文件数-->
			<maxSizeRollBackups value="10"/>
			<!--是否只写到一个文件中-->
			<StaticLogFileName value="false"/>
			<!--按照何种方式产生多个日志文件(日期[Date],文件大小[Size],混合[Composite])-->
			<rollingStyle value="Date" />
			<!--日期的格式，每天换一个文件记录，如不设置则永远只记录一天的日志，需设置-->
			<param name="datePattern" value="yyyy-MM/yyyy-MM-dd.'log'" />
			<!--过滤设置，LevelRangeFilter为使用的过滤器。-->
			<filter type="log4net.Filter.LevelRangeFilter">
				<levelMin value="DEBUG" />
				<levelMax value="DEBUG" />
			</filter>
			<!--日志格式-->
			<layout type="log4net.Layout.PatternLayout">
				<!-- 输出格式 日期，日志级别，消息，换行-->
				<param name="ConversionPattern" value="%date [%-5p] %message%n" />
			</layout>
		</appender>

		<!--InfoLog文件日志记录器-->
		<appender name="InfoLogger" type="log4net.Appender.RollingFileAppender">
			<!--日志存放文件夹-->
			<file value="Log\Run_Log\"/>
			<!--是否追加到文件-->
			<appendToFile value="true" />
			<!--记录日志写入文件时，不锁定文本文件，防止多线程时不能写Log,官方说线程非安全-->
			<lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
			<!--使用UTF-8编码-->
			<Encoding value="UTF-8" />
			<!--最多产生的日志文件数，超过则只保留最新的n个。设定值value="－1"为不限文件数-->
			<maxSizeRollBackups value="10"/>
			<!--是否只写到一个文件中-->
			<StaticLogFileName value="false"/>
			<!--按照何种方式产生多个日志文件(日期[Date],文件大小[Size],混合[Composite])-->
			<rollingStyle value="Date" />
			<!--日期的格式，每天换一个文件记录，如不设置则永远只记录一天的日志，需设置-->
			<param name="datePattern" value="yyyy-MM/yyyy-MM-dd.'log'" />
			<!--过滤设置，LevelRangeFilter为使用的过滤器。-->
			<filter type="log4net.Filter.LevelRangeFilter">
				<levelMin value="INFO" />
				<levelMax value="INFO" />
			</filter>
			<!--日志格式-->
			<layout type="log4net.Layout.PatternLayout">
				<!-- 输出格式 日期，日志级别，消息，换行-->
				<param name="ConversionPattern" value="%date [%-5p] %message%n" />
			</layout>
		</appender>

		<!--WarnLog文件日志记录器-->
		<appender name="WarnLogger" type="log4net.Appender.RollingFileAppender">
			<!--日志存放文件夹-->
			<file value="Log\Warn\"/>
			<!--是否追加到文件-->
			<appendToFile value="true" />
			<!--记录日志写入文件时，不锁定文本文件，防止多线程时不能写Log,官方说线程非安全-->
			<lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
			<!--使用UTF-8编码-->
			<Encoding value="UTF-8" />
			<!--最多产生的日志文件数，超过则只保留最新的n个。设定值value="－1"为不限文件数-->
			<maxSizeRollBackups value="10"/>
			<!--是否只写到一个文件中-->
			<StaticLogFileName value="false"/>
			<!--按照何种方式产生多个日志文件(日期[Date],文件大小[Size],混合[Composite])-->
			<rollingStyle value="Date" />
			<!--日期的格式，每天换一个文件记录，如不设置则永远只记录一天的日志，需设置-->
			<param name="datePattern" value="yyyy-MM/yyyy-MM-dd.'log'" />
			<!--过滤设置，LevelRangeFilter为使用的过滤器。-->
			<filter type="log4net.Filter.LevelRangeFilter">
				<levelMin value="WARN" />
				<levelMax value="WARN" />
			</filter>
			<!--日志格式-->
			<layout type="log4net.Layout.PatternLayout">
				<!-- 输出格式 日期，日志级别，消息，换行-->
				<param name="ConversionPattern" value="%date [%-5p] %message%n" />
			</layout>
		</appender>

		<!--ErrorLog文件日志记录器-->
		<appender name="ErrorLogger" type="log4net.Appender.RollingFileAppender">
			<!--日志存放文件夹-->
			<file value="Log\Error_Log\"/>
			<!--是否追加到文件-->
			<appendToFile value="true" />
			<!--记录日志写入文件时，不锁定文本文件，防止多线程时不能写Log,官方说线程非安全-->
			<lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
			<!--使用UTF-8编码-->
			<Encoding value="UTF-8" />
			<!--最多产生的日志文件数，超过则只保留最新的n个。设定值value="－1"为不限文件数-->
			<maxSizeRollBackups value="10"/>
			<!--是否只写到一个文件中-->
			<StaticLogFileName value="false"/>
			<!--按照何种方式产生多个日志文件(日期[Date],文件大小[Size],混合[Composite])-->
			<rollingStyle value="Date" />
			<!--日期的格式，每天换一个文件记录，如不设置则永远只记录一天的日志，需设置-->
			<param name="datePattern" value="yyyy-MM/yyyy-MM-dd.'log'" />
			<!--过滤设置，LevelRangeFilter为使用的过滤器。-->
			<filter type="log4net.Filter.LevelRangeFilter">
				<levelMin value="ERROR" />
				<levelMax value="ERROR" />
			</filter>
			<!--日志格式-->
			<layout type="log4net.Layout.PatternLayout">
				<!-- 输出格式 日期，日志级别，消息，换行-->
				<param name="ConversionPattern" value="%date [%-5p] %message%n" />
			</layout>
		</appender>

		<!--FatalLog文件日志记录器-->
		<appender name="FatalLogger" type="log4net.Appender.RollingFileAppender">
			<!--日志存放文件夹-->
			<file value="Log\Fatal\"/>
			<!--是否追加到文件-->
			<appendToFile value="true" />
			<!--记录日志写入文件时，不锁定文本文件，防止多线程时不能写Log,官方说线程非安全-->
			<lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
			<!--使用UTF-8编码-->
			<Encoding value="UTF-8" />
			<!--最多产生的日志文件数，超过则只保留最新的n个。设定值value="－1"为不限文件数-->
			<maxSizeRollBackups value="10"/>
			<!--是否只写到一个文件中-->
			<StaticLogFileName value="false"/>
			<!--按照何种方式产生多个日志文件(日期[Date],文件大小[Size],混合[Composite])-->
			<rollingStyle value="Date" />
			<!--日期的格式，每天换一个文件记录，如不设置则永远只记录一天的日志，需设置-->
			<param name="datePattern" value="yyyy-MM/yyyy-MM-dd.'log'" />
			<!--过滤设置，LevelRangeFilter为使用的过滤器。-->
			<filter type="log4net.Filter.LevelRangeFilter">
				<levelMin value="FATAL" />
				<levelMax value="FATAL" />
			</filter>
			<!--日志格式-->
			<layout type="log4net.Layout.PatternLayout">
				<!-- 输出格式 日期，日志级别，消息，换行-->
				<param name="ConversionPattern" value="%date [%-5p] %message%n" />
			</layout>
		</appender>

	</log4net>
</configuration>